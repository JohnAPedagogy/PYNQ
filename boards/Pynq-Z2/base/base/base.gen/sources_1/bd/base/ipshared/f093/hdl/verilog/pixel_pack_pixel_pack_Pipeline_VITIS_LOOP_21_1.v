// ==============================================================
// Generated by Vitis HLS v2025.1
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2025 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module pixel_pack_pixel_pack_Pipeline_VITIS_LOOP_21_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        stream_in_24_TVALID,
        stream_out_32_TREADY,
        stream_out_32_TDATA,
        stream_out_32_TVALID,
        stream_out_32_TKEEP,
        stream_out_32_TSTRB,
        stream_out_32_TUSER,
        stream_out_32_TLAST,
        stream_in_24_TDATA,
        stream_in_24_TREADY,
        stream_in_24_TKEEP,
        stream_in_24_TSTRB,
        stream_in_24_TUSER,
        stream_in_24_TLAST
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   stream_in_24_TVALID;
input   stream_out_32_TREADY;
output  [31:0] stream_out_32_TDATA;
output   stream_out_32_TVALID;
output  [3:0] stream_out_32_TKEEP;
output  [3:0] stream_out_32_TSTRB;
output  [0:0] stream_out_32_TUSER;
output  [0:0] stream_out_32_TLAST;
input  [23:0] stream_in_24_TDATA;
output   stream_in_24_TREADY;
input  [2:0] stream_in_24_TKEEP;
input  [2:0] stream_in_24_TSTRB;
input  [0:0] stream_in_24_TUSER;
input  [0:0] stream_in_24_TLAST;

reg ap_idle;
reg[31:0] stream_out_32_TDATA;
reg stream_out_32_TVALID;
reg[0:0] stream_out_32_TUSER;
reg[0:0] stream_out_32_TLAST;
reg stream_in_24_TREADY;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
reg   [0:0] delayed_last_reg_127;
reg   [0:0] last_8_reg_138;
reg   [0:0] in_pixel_last_reg_441;
reg    ap_predicate_op33_read_state2;
reg    ap_block_state2_pp0_stage1_iter0_grp1;
reg    ap_block_pp0_stage1_subdone_grp1_done_reg;
reg    ap_block_pp0_stage1_subdone_grp1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter0_reg;
reg   [0:0] delayed_last_reg_127_pp0_iter1_reg;
reg   [0:0] last_8_reg_138_pp0_iter1_reg;
reg    ap_predicate_op80_write_state6;
reg    ap_block_state6_pp0_stage1_iter1_grp5;
reg    ap_block_pp0_stage1_subdone_grp5_done_reg;
reg    ap_block_pp0_stage1_subdone_grp5;
reg    ap_condition_exit_pp0_iter0_stage1;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage3;
reg   [0:0] in_pixel_last_4_reg_458;
reg   [0:0] in_pixel_last_5_reg_475;
reg    ap_predicate_op57_read_state4;
reg    ap_predicate_op70_write_state4;
reg    ap_block_state4_pp0_stage3_iter0_grp3;
reg    ap_block_pp0_stage3_subdone;
reg    stream_out_32_TDATA_blk_n;
wire    ap_block_pp0_stage3_grp3;
wire    ap_block_pp0_stage0_grp4;
reg    ap_block_pp0_stage0_subdone_grp4_done_reg;
reg    ap_block_pp0_stage0_subdone_grp4;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_grp5;
reg    stream_in_24_TDATA_blk_n;
wire    ap_block_pp0_stage0;
reg   [0:0] ap_phi_mux_delayed_last_phi_fu_130_p4;
reg   [0:0] ap_phi_mux_last_8_phi_fu_142_p4;
wire    ap_block_pp0_stage1_grp1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2_grp2;
reg    ap_predicate_op28_read_state1;
reg    ap_block_state1_pp0_stage0_iter0;
reg    ap_predicate_op79_write_state5;
reg    ap_block_state5_pp0_stage0_iter1_grp4;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] last_2_31207_reg_206;
reg   [23:0] in_pixel_data_reg_429;
reg   [0:0] in_pixel_user_reg_435;
reg   [23:0] in_pixel_data_5_reg_446;
reg    ap_block_pp0_stage1_11001_grp1;
reg   [0:0] in_pixel_user_5_reg_452;
reg   [23:0] in_pixel_data_6_reg_463;
reg    ap_predicate_op38_read_state3;
reg    ap_block_state3_pp0_stage2_iter0_grp2;
reg    ap_block_pp0_stage2_11001_grp2;
reg   [0:0] in_pixel_user_6_reg_469;
reg   [31:0] out_pixel_data_1_reg_480;
reg    ap_block_pp0_stage3_11001_grp3;
reg   [0:0] out_pixel_user_1_reg_485;
reg   [0:0] out_pixel_last_1_reg_490;
reg   [31:0] out_pixel_data_2_reg_495;
reg   [0:0] out_pixel_user_2_reg_500;
reg   [0:0] out_pixel_last_2_reg_505;
wire    ap_loop_init;
reg   [95:0] ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8;
wire   [95:0] buffer_3_fu_335_p5;
wire   [95:0] ap_phi_reg_pp0_iter0_buffer_1_3_ph_reg_150;
wire   [95:0] buffer_fu_233_p4;
wire   [95:0] buffer_1_fu_267_p4;
wire   [95:0] buffer_2_fu_301_p4;
reg   [3:0] ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8;
wire   [3:0] has_last_3_fu_353_p3;
wire   [3:0] ap_phi_reg_pp0_iter0_has_last_1_3_ph_reg_163;
wire   [3:0] has_last_fu_257_p4;
wire   [3:0] has_last_1_fu_291_p4;
wire   [3:0] has_last_2_fu_325_p4;
reg   [2:0] ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8;
wire   [2:0] has_user_3_fu_345_p4;
wire   [2:0] ap_phi_reg_pp0_iter0_has_user_1_3_ph_reg_176;
wire   [2:0] trunc_ln26_fu_252_p1;
wire   [2:0] trunc_ln26_1_fu_286_p1;
wire   [2:0] trunc_ln26_2_fu_320_p1;
reg   [0:0] ap_phi_mux_last_2_3_ph_phi_fu_193_p8;
wire   [0:0] ap_phi_reg_pp0_iter0_last_2_31207_reg_206;
wire   [31:0] out_pixel_data_fu_362_p1;
reg    ap_block_pp0_stage3_01001_grp3;
reg    ap_block_pp0_stage0_01001_grp4;
reg    ap_block_pp0_stage1_01001_grp5;
wire   [0:0] out_pixel_user_fu_367_p1;
reg    ap_block_pp0_stage0_11001_grp4;
reg    ap_block_pp0_stage1_11001_grp5;
wire   [95:0] buffer_fu_233_p1;
wire   [3:0] has_user_fu_243_p1;
wire   [3:0] has_user_fu_243_p4;
wire   [3:0] has_last_fu_257_p1;
wire   [3:0] has_user_1_fu_277_p4;
wire   [3:0] has_user_2_fu_311_p4;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [3:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
reg    ap_condition_566;
reg    ap_condition_571;
reg    ap_condition_575;
reg    ap_condition_579;
reg    ap_condition_294;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp1_done_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_block_pp0_stage1_subdone_grp5_done_reg = 1'b0;
#0 ap_block_pp0_stage0_subdone_grp4_done_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

pixel_pack_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage1),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage0_subdone_grp4_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
                ap_block_pp0_stage0_subdone_grp4_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage0_subdone_grp4)) begin
                ap_block_pp0_stage0_subdone_grp4_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp1)) begin
                ap_block_pp0_stage1_subdone_grp1_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_block_pp0_stage1_subdone_grp5_done_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage1)) begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_block_pp0_stage1_subdone_grp5_done_reg <= 1'b0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone_grp5)) begin
                ap_block_pp0_stage1_subdone_grp5_done_reg <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            delayed_last_reg_127 <= 1'd0;
        end else if ((1'b1 == ap_condition_579)) begin
            delayed_last_reg_127 <= last_8_reg_138;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_294)) begin
        if (((last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0))) begin
            last_2_31207_reg_206 <= ap_phi_mux_last_2_3_ph_phi_fu_193_p8;
        end else if ((1'b1 == 1'b1)) begin
            last_2_31207_reg_206 <= ap_phi_reg_pp0_iter0_last_2_31207_reg_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_init == 1'b1))) begin
            last_8_reg_138 <= 1'd0;
        end else if ((1'b1 == ap_condition_579)) begin
            last_8_reg_138 <= last_2_31207_reg_206;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        delayed_last_reg_127_pp0_iter1_reg <= delayed_last_reg_127;
        last_8_reg_138_pp0_iter1_reg <= last_8_reg_138;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        in_pixel_data_5_reg_446 <= stream_in_24_TDATA;
        in_pixel_last_4_reg_458 <= stream_in_24_TLAST;
        in_pixel_user_5_reg_452 <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        in_pixel_data_6_reg_463 <= stream_in_24_TDATA;
        in_pixel_last_5_reg_475 <= stream_in_24_TLAST;
        in_pixel_user_6_reg_469 <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_pixel_data_reg_429 <= stream_in_24_TDATA;
        in_pixel_last_reg_441 <= stream_in_24_TLAST;
        in_pixel_user_reg_435 <= stream_in_24_TUSER;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        out_pixel_data_1_reg_480 <= {{ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8[63:32]}};
        out_pixel_data_2_reg_495 <= {{ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8[95:64]}};
        out_pixel_last_1_reg_490 <= ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8[32'd2];
        out_pixel_last_2_reg_505 <= ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8[32'd3];
        out_pixel_user_1_reg_485 <= ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8[32'd1];
        out_pixel_user_2_reg_500 <= ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8[32'd2];
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (delayed_last_reg_127 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0))) begin
        if ((1'b1 == ap_condition_571)) begin
            ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8 = buffer_2_fu_301_p4;
        end else if (((in_pixel_last_reg_441 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd1))) begin
            ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8 = buffer_1_fu_267_p4;
        end else if ((in_pixel_last_reg_441 == 1'd1)) begin
            ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8 = buffer_fu_233_p4;
        end else if ((1'b1 == ap_condition_566)) begin
            ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8 = buffer_3_fu_335_p5;
        end else begin
            ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8 = ap_phi_reg_pp0_iter0_buffer_1_3_ph_reg_150;
        end
    end else begin
        ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8 = ap_phi_reg_pp0_iter0_buffer_1_3_ph_reg_150;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_delayed_last_phi_fu_130_p4 = 1'd0;
        end else if ((1'b1 == ap_condition_575)) begin
            ap_phi_mux_delayed_last_phi_fu_130_p4 = last_8_reg_138;
        end else begin
            ap_phi_mux_delayed_last_phi_fu_130_p4 = delayed_last_reg_127;
        end
    end else begin
        ap_phi_mux_delayed_last_phi_fu_130_p4 = delayed_last_reg_127;
    end
end

always @ (*) begin
    if (((last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0))) begin
        if ((1'b1 == ap_condition_571)) begin
            ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8 = has_last_2_fu_325_p4;
        end else if (((in_pixel_last_reg_441 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd1))) begin
            ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8 = has_last_1_fu_291_p4;
        end else if ((in_pixel_last_reg_441 == 1'd1)) begin
            ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8 = has_last_fu_257_p4;
        end else if ((1'b1 == ap_condition_566)) begin
            ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8 = has_last_3_fu_353_p3;
        end else begin
            ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8 = ap_phi_reg_pp0_iter0_has_last_1_3_ph_reg_163;
        end
    end else begin
        ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8 = ap_phi_reg_pp0_iter0_has_last_1_3_ph_reg_163;
    end
end

always @ (*) begin
    if (((last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0))) begin
        if ((1'b1 == ap_condition_571)) begin
            ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8 = trunc_ln26_2_fu_320_p1;
        end else if (((in_pixel_last_reg_441 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd1))) begin
            ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8 = trunc_ln26_1_fu_286_p1;
        end else if ((in_pixel_last_reg_441 == 1'd1)) begin
            ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8 = trunc_ln26_fu_252_p1;
        end else if ((1'b1 == ap_condition_566)) begin
            ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8 = has_user_3_fu_345_p4;
        end else begin
            ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8 = ap_phi_reg_pp0_iter0_has_user_1_3_ph_reg_176;
        end
    end else begin
        ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8 = ap_phi_reg_pp0_iter0_has_user_1_3_ph_reg_176;
    end
end

always @ (*) begin
    if (((in_pixel_last_reg_441 == 1'd0) & (last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0) & (in_pixel_last_5_reg_475 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd0))) begin
        ap_phi_mux_last_2_3_ph_phi_fu_193_p8 = stream_in_24_TLAST;
    end else begin
        ap_phi_mux_last_2_3_ph_phi_fu_193_p8 = 1'd1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        if ((ap_loop_init == 1'b1)) begin
            ap_phi_mux_last_8_phi_fu_142_p4 = 1'd0;
        end else if ((1'b1 == ap_condition_575)) begin
            ap_phi_mux_last_8_phi_fu_142_p4 = last_2_31207_reg_206;
        end else begin
            ap_phi_mux_last_8_phi_fu_142_p4 = 1'd0;
        end
    end else begin
        ap_phi_mux_last_8_phi_fu_142_p4 = 1'd0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_grp1) & (ap_predicate_op33_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_grp2) & (in_pixel_last_reg_441 == 1'd0) & (last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (in_pixel_last_4_reg_458 == 1'd0)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op57_read_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_phi_mux_last_8_phi_fu_142_p4 == 1'd0) & (ap_phi_mux_delayed_last_phi_fu_130_p4 == 1'd0)))) begin
        stream_in_24_TDATA_blk_n = stream_in_24_TVALID;
    end else begin
        stream_in_24_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp1) & (ap_predicate_op33_read_state2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op57_read_state4 == 1'b1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage2_11001_grp2) & (ap_predicate_op38_read_state3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op28_read_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_in_24_TREADY = 1'b1;
    end else begin
        stream_in_24_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage1_01001_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stream_out_32_TDATA = out_pixel_data_2_reg_495;
    end else if (((1'b0 == ap_block_pp0_stage0_01001_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_32_TDATA = out_pixel_data_1_reg_480;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op70_write_state4 == 1'b1))) begin
        stream_out_32_TDATA = out_pixel_data_fu_362_p1;
    end else begin
        stream_out_32_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op80_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage1_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op70_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (1'b0 == ap_block_pp0_stage0_grp4) & (last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_out_32_TDATA_blk_n = stream_out_32_TREADY;
    end else begin
        stream_out_32_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage1_01001_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stream_out_32_TLAST = out_pixel_last_2_reg_505;
    end else if (((1'b0 == ap_block_pp0_stage0_01001_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_32_TLAST = out_pixel_last_1_reg_490;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op70_write_state4 == 1'b1))) begin
        stream_out_32_TLAST = ap_phi_mux_has_last_1_3_ph_phi_fu_166_p8[32'd1];
    end else begin
        stream_out_32_TLAST = 'bx;
    end
end

always @ (*) begin
    if (((ap_predicate_op80_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage1_01001_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        stream_out_32_TUSER = out_pixel_user_2_reg_500;
    end else if (((1'b0 == ap_block_pp0_stage0_01001_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        stream_out_32_TUSER = out_pixel_user_1_reg_485;
    end else if (((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_01001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op70_write_state4 == 1'b1))) begin
        stream_out_32_TUSER = out_pixel_user_fu_367_p1;
    end else begin
        stream_out_32_TUSER = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op80_write_state6 == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (1'b0 == ap_block_pp0_stage1_11001_grp5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_predicate_op70_write_state4 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001_grp4) & (1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (ap_predicate_op79_write_state5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        stream_out_32_TVALID = 1'b1;
    end else begin
        stream_out_32_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage1)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001_grp4 = ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1_grp4));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1_grp4)));
end

always @ (*) begin
    ap_block_pp0_stage0_11001_grp4 = ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1_grp4));
end

assign ap_block_pp0_stage0_grp4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_block_state1_pp0_stage0_iter0)) | ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1_grp4)));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone_grp4 = ((1'b0 == ap_block_pp0_stage0_subdone_grp4_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state5_pp0_stage0_iter1_grp4));
end

always @ (*) begin
    ap_block_pp0_stage1_01001_grp5 = ((1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage1_iter1_grp5));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp1 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001_grp5 = ((1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage1_iter1_grp5));
end

assign ap_block_pp0_stage1_grp1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_grp5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage1_subdone = (((1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage1_iter1_grp5)) | ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1)));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp1 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage1_subdone_grp1_done_reg) & (1'b1 == ap_block_state2_pp0_stage1_iter0_grp1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone_grp5 = ((1'b0 == ap_block_pp0_stage1_subdone_grp5_done_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state6_pp0_stage1_iter1_grp5));
end

always @ (*) begin
    ap_block_pp0_stage2_11001_grp2 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0_grp2));
end

assign ap_block_pp0_stage2_grp2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state3_pp0_stage2_iter0_grp2));
end

always @ (*) begin
    ap_block_pp0_stage3_01001_grp3 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0_grp3));
end

always @ (*) begin
    ap_block_pp0_stage3_11001_grp3 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0_grp3));
end

assign ap_block_pp0_stage3_grp3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b1 == ap_block_state4_pp0_stage3_iter0_grp3));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op28_read_state1 == 1'b1));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0_grp1 = ((ap_predicate_op33_read_state2 == 1'b1) & (stream_in_24_TVALID == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0_grp2 = ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op38_read_state3 == 1'b1));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0_grp3 = (((stream_out_32_TREADY == 1'b0) & (ap_predicate_op70_write_state4 == 1'b1)) | ((stream_in_24_TVALID == 1'b0) & (ap_predicate_op57_read_state4 == 1'b1)));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter1_grp4 = ((stream_out_32_TREADY == 1'b0) & (ap_predicate_op79_write_state5 == 1'b1));
end

always @ (*) begin
    ap_block_state6_pp0_stage1_iter1_grp5 = ((ap_predicate_op80_write_state6 == 1'b1) & (stream_out_32_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_294 = ((ap_enable_reg_pp0_iter0_reg == 1'b1) & (1'b0 == ap_block_pp0_stage3_11001_grp3) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_566 = ((in_pixel_last_reg_441 == 1'd0) & (in_pixel_last_5_reg_475 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd0));
end

always @ (*) begin
    ap_condition_571 = ((in_pixel_last_reg_441 == 1'd0) & (in_pixel_last_5_reg_475 == 1'd1) & (in_pixel_last_4_reg_458 == 1'd0));
end

always @ (*) begin
    ap_condition_575 = ((1'b0 == ap_block_pp0_stage0) & (delayed_last_reg_127 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_condition_579 = ((1'b0 == ap_block_pp0_stage0_11001) & (delayed_last_reg_127 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage1;

assign ap_phi_reg_pp0_iter0_buffer_1_3_ph_reg_150 = 'bx;

assign ap_phi_reg_pp0_iter0_has_last_1_3_ph_reg_163 = 'bx;

assign ap_phi_reg_pp0_iter0_has_user_1_3_ph_reg_176 = 'bx;

assign ap_phi_reg_pp0_iter0_last_2_31207_reg_206 = 1'd1;

always @ (*) begin
    ap_predicate_op28_read_state1 = ((ap_phi_mux_last_8_phi_fu_142_p4 == 1'd0) & (ap_phi_mux_delayed_last_phi_fu_130_p4 == 1'd0));
end

always @ (*) begin
    ap_predicate_op33_read_state2 = ((in_pixel_last_reg_441 == 1'd0) & (last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0));
end

always @ (*) begin
    ap_predicate_op38_read_state3 = ((in_pixel_last_reg_441 == 1'd0) & (last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd0));
end

always @ (*) begin
    ap_predicate_op57_read_state4 = ((in_pixel_last_reg_441 == 1'd0) & (last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0) & (in_pixel_last_5_reg_475 == 1'd0) & (in_pixel_last_4_reg_458 == 1'd0));
end

always @ (*) begin
    ap_predicate_op70_write_state4 = ((last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0));
end

always @ (*) begin
    ap_predicate_op79_write_state5 = ((last_8_reg_138 == 1'd0) & (delayed_last_reg_127 == 1'd0));
end

always @ (*) begin
    ap_predicate_op80_write_state6 = ((last_8_reg_138_pp0_iter1_reg == 1'd0) & (delayed_last_reg_127_pp0_iter1_reg == 1'd0));
end

assign ap_ready = ap_ready_sig;

assign buffer_1_fu_267_p4 = {{buffer_fu_233_p4[95:48]}, {in_pixel_data_5_reg_446}, {buffer_fu_233_p4[23:0]}};

assign buffer_2_fu_301_p4 = {{buffer_1_fu_267_p4[95:72]}, {in_pixel_data_6_reg_463}, {buffer_1_fu_267_p4[47:0]}};

assign buffer_3_fu_335_p5 = {{{{stream_in_24_TDATA}, {in_pixel_data_6_reg_463}}, {in_pixel_data_5_reg_446}}, {in_pixel_data_reg_429}};

assign buffer_fu_233_p1 = 'bx;

assign buffer_fu_233_p4 = {{buffer_fu_233_p1[95:24]}, {in_pixel_data_reg_429}};

assign has_last_1_fu_291_p4 = {has_last_fu_257_p4[4 - 1:2], |(in_pixel_last_4_reg_458), has_last_fu_257_p4[0:0]};

assign has_last_2_fu_325_p4 = {has_last_1_fu_291_p4[4 - 1:3], |(in_pixel_last_5_reg_475), has_last_1_fu_291_p4[1:0]};

assign has_last_3_fu_353_p3 = {{stream_in_24_TLAST}, {3'd0}};

assign has_last_fu_257_p1 = 'bx;

assign has_last_fu_257_p4 = {has_last_fu_257_p1[4-1:1], |(in_pixel_last_reg_441)};

assign has_user_1_fu_277_p4 = {has_user_fu_243_p4[4 - 1:2], |(in_pixel_user_5_reg_452), has_user_fu_243_p4[0:0]};

assign has_user_2_fu_311_p4 = {has_user_1_fu_277_p4[4 - 1:3], |(in_pixel_user_6_reg_469), has_user_1_fu_277_p4[1:0]};

assign has_user_3_fu_345_p4 = {{{in_pixel_user_6_reg_469}, {in_pixel_user_5_reg_452}}, {in_pixel_user_reg_435}};

assign has_user_fu_243_p1 = 'bx;

assign has_user_fu_243_p4 = {has_user_fu_243_p1[4-1:1], |(in_pixel_user_reg_435)};

assign out_pixel_data_fu_362_p1 = ap_phi_mux_buffer_1_3_ph_phi_fu_153_p8[31:0];

assign out_pixel_user_fu_367_p1 = ap_phi_mux_has_user_1_3_ph_phi_fu_179_p8[0:0];

assign stream_out_32_TKEEP = 'bx;

assign stream_out_32_TSTRB = 'bx;

assign trunc_ln26_1_fu_286_p1 = has_user_1_fu_277_p4[2:0];

assign trunc_ln26_2_fu_320_p1 = has_user_2_fu_311_p4[2:0];

assign trunc_ln26_fu_252_p1 = has_user_fu_243_p4[2:0];

endmodule //pixel_pack_pixel_pack_Pipeline_VITIS_LOOP_21_1
